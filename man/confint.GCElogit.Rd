% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/confint.GCElogit.R
\name{confint.GCElogit}
\alias{confint.GCElogit}
\title{Wald confidence intervals for beta = lambda/(1 - nu) from a GCElogit fit
S3 method for class "GCElogit"}
\usage{
\method{confint}{GCElogit}(object, parm = NULL, level = 0.95,
  method = "sandwich", ...)
}
\arguments{
\item{object}{an object of class "gce_mult" returned by gce_mult(), expected to contain:
$lambda (K x J), $hess (Hessian for free params vec(lambda[,2:J])),
and $nu (scalar in (0,1))}

\item{parm}{a specification of which parameters are to be given confidence intervals, either a vector of numbers or a vector of names. If missing, all parameters are considered}

\item{level}{confidence level (default 0.95)}

\item{method}{character string specifying the type of varianceâ€“covariance estimator to be used. Possible values are \code{"sandwich"} for the robust sandwich estimator based on the score contributions (default), and \code{"classic"} for the classical estimator based on the inverse of the observed Hessian matrix. Any other value will result in an error.}

\item{...}{unused, for S3 compatibility}
}
\value{
a matrix with two columns ("lower","upper") and one row per requested parameter
}
\description{
Wald confidence intervals for beta = lambda/(1 - nu) from a GCElogit fit
S3 method for class "GCElogit"
}
\examples{
set.seed(7654)
betas <- c(-0.5, 1, -0.8, 0.6, 0, 0)
sim1 <- DGPlogit(N=1000, beta=betas,
                 corr="indep", margins="gaussian")
fit <- GCElogit.fit(y=sim1$y, X=sim1$X)
cbind(betas, fit$coefficients, confint(fit))
}
